logging.level.org.springframework.data=TRACE
spring.webflux.hiddenmethod.filter.enabled=true

# actuator
#management.endpoints.web.base-path=/manage
#management.endpoints.web.base-path=/
#management.endpoints.web.path-mapping.loggers=logs
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=auditevents,beans,caches,conditions,configprops,env,flyway,health,heapdump,\
  httptrace,info,logfile,loggers,metrics,mappings,shutdown,threaddump
management.endpoint.shutdown.enabled=true
management.endpoint.auditevents.enabled=true
management.endpoint.flyway.enabled=true
management.endpoint.logfile.enabled=true

#logging.file=./target/logs/${spring.application.name}/${spring.application.instance_id}.log

#
# the following endpoints is not working
# - auditevents, flyway, httptrace, logfile
#
# Auditing can be enabled by providing a bean of type AuditEventRepository in your application?s configuration.
# Try to add following bean into your app :
#@Bean
#public InMemoryAuditEventRepository repository(){
# return new InMemoryAuditEventRepository();
#}
#
# provide a HttpTraceRepository bean like this:
#@Configuration
#// @Profile("actuator-endpoints") /* if you want: register bean only if profile is set */
#public class HttpTraceActuatorConfiguration {
#    @Bean
#    public HttpTraceRepository httpTraceRepository() {
#        return new InMemoryHttpTraceRepository();
#    }
#}
#

info.project.version=@project.version@
info.java.version=@java.version@
info.spring.framework.version=@spring-framework.version@

# why it don't work?
info.spring.data.version=@spring-data-bom.version@
